spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 50MB


  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      channels:
        like_channel:
          name: like-channel
        calculations_channel:
          name: calculations_channel
        post_view_channel:
          name: post_view_channel
        post_save_cache:
          name: post_save_cache

    kafka:
      bootstrap-servers: localhost:9092
      topics:
        post:
          name: posts
          partitions: 5
          replicas: 1
        post-views:
           name: post-views
           partitions: 6
           replicas: 1
        likes:
           name: likes
           partitions: 6
           replicas: 1
        comments:
           name: comments
           partitions: 3
           replicas: 1
        heater:
           name: heater
           partitions: 3
           replicas: 1
      async:
        thread-pool-settings:
          post:
            core-pool-size: 2
            max-pool-size: 4
            queue-capacity: 200
          post-view:
            core-pool-size: 2
            max-pool-size: 6
            queue-capacity: 1000
          comments:
            core-pool-size: 2
            max-pool-size: 4
            queue-capacity: 100
          likes:
            core-pool-size: 4
            max-pool-size: 10
            queue-capacity: 1000
        util:
          batch-size: 1000
      feed:
        async:
          core-pool-size: 2
          max-pool-size: 6
          queue-capacity: 1000
        heater:
          requests:
            users:
              path: http://localhost:8080/users
              request-size: 1000
          async:
            core-pool-size: 2
            max-pool-size: 6
            queue-capacity: 1000
          util:
            posts-batch-size: 100

server:
  port: 8081

logging:
  level:
    root: info

post:
  publisher:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
  ad-remover:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute

user-service:
  host: localhost
  port: 8080
project-service:
  host: localhost
  port: 8082
payment-service:
  host: localhost
  port: 9080

services:
  s3:
    endpoint: http://localhost:9000
    accessKey: user
    secretKey: password
    bucketName: corpbucket

aws:
  accessKey: user
  secretKey: password
  region: http://127.0.0.1:9000/
  bucket-name: user-bucket

pool:
  notice-pool:
    core-pool-size: 10
    maximum-pool-size: 15
    keep-alive-time: 5000
    capacity: 10000

page:
  size: 20